# general config file for varcap
# config file is valid for the included project
# the default settings should work for most projects using Illumina Hiseq/Miseq paired end reads

# absolute path to varcap folder
PATH_VARCAP=/scratch/zojer/projects/varcap_3.0
## path to projects folder (do not edit, except you want the data folder somewhere else)
PATH_PROJECTS_DATA=$PATH_VARCAP/../varcap_data

## 0. project name and individual variables (can be set by user, however defaults should work)
# The variables of this section should be set by the user, they include basic information about the project like
# project name, location of fwd(1) and rev(2) reads, readlength and insert size (bp)

## 1. setup path, readlength and insert size (name and path are automatically set on project setup/initiation)
PROJ_NAME=09_135Av07_2M_Proto_am_U25
READS1=$PATH_PROJECTS_DATA/${PROJ_NAME}/raw/*_1.f*q*
READS2=$PATH_PROJECTS_DATA/${PROJ_NAME}/raw/*_2.f*q*
READLENGTH=100
INSERT_SIZE=250

## 1.b option for creating artificial mock sets, see settings at bottom of file

## 2. Quality filtering options (supplied values should cover most cases, edit only if default filters do not work as expected)

# A standard set of quality filters is applied to the reads, however you have the option to manually add values for the removal of bad quality bases from the 3'end.
# If READS1,2_TRIM are set, READS1 and READS2 are hard trimmed for the given number of bases from the 3'end (bp) e.g. READS1_TRIM=12 removes 12 bases from the 3'end
# else an automated approach (sliding window is used, default setting:0,0)
READS1_TRIM=0
READS2_TRIM=0
READS1_TRIMF=0
READS2_TRIMF=0
# set qual windows length (for both read pairs) (QUAL_WINDOW_1, QUAL_WINDOW_2), average quality within the window (QUAL_WINDOW_QUAL_1, QUAL_WINDOW_QUAL_2) and 
# minimum length of a fragment to be kept (shorter fragments will be discarded) (MIN_LENGTH_1, MIN_LENGTH_2)
QUAL_WINDOW_1=5
QUAL_WINDOW_2=5
QUAL_WINDOW_QUAL_1=20
QUAL_WINDOW_QUAL_2=20
MIN_LENGTH_1=40
MIN_LENGTH_2=40

## 3. Reference

# reference file in fasta format:
REF_FA_ORIGINAL=/path/to/genome.fasta
# path to folder with fasta references. If it exists, they will be used to remove reads before the actual mapping to remove possible contamination
REF_MAPPING=/path/to/additional/ref/for/mapping

## 4. Mapping options (name(BAM_NAME_BASE) is set by default, read count(SUBSAMPLE_SIZE_ALT),iterations(REPEATS) and path)

# BAM_NAME_BASE ... name of the bam file, generated automatically
# REPEATS ... number of replicates in case you want to subsample
# SUBSAMPLE_SIZE_ALT -1 means all reads, or edit for specific number (subsampling)
BAM_NAME_BASE=09_135Av07_2M_Proto_am_U25
REPEATS=1
SUBSAMPLE_SIZE_ALT=-1
### path to sequencing reads for mapping
## per default, the reads are stored within the filter dir of the project as PATH_ALT_READS1/2 as described below
## therefore you do not have to change any paths during realdata analysis
PATH_ALT_READS1=${PATH_PROJECTS_DATA}/${PROJ_NAME}/filter/${PROJ_NAME}_alt_1.fastq*
PATH_ALT_READS2=${PATH_PROJECTS_DATA}/${PROJ_NAME}/filter/${PROJ_NAME}_alt_2.fastq*

## 4. Postfiltering options

# set variant abundance properties for postfiltering vcf
# MAA minimum absolute abundance (in reads)
MAA=8
# MRA minimum relative abundance (in percent)
MRA=2

## 5. Annotation

# reference database for SNPEff (you have to download/create a reference database)
# SNPEFF_REF=Candidatus_Protochlamydia_amoebophila_UWE25_uid58079
SNPEFF_REF=NC_005861_PAC_03_d38_d63_d20_i46_s

### 1.b Simulation data mix
# edit data paths for A
SUBSAMPLE_SIZE_A=0
PATH_A_READS1=${PATH_PROJECTS_DATA}/${PROJ_NAME}/filter/${PROJ_NAME}_alt_1.fastq*
PATH_A_READS2=${PATH_PROJECTS_DATA}/${PROJ_NAME}/filter/${PROJ_NAME}_alt_2.fastq*
# edit the paths to the second read pairs here, if you want to create a mock/mixed population of reads
# edit the read count of the second read pairs ( 0 means disabled ) for B
SUBSAMPLE_SIZE_B=0
PATH_B_READS1=${PATH_PROJECTS_DATA}/E25_ref20M/filter/E25_ref20M_alt_1.fastq*
PATH_B_READS2=${PATH_PROJECTS_DATA}/E25_ref20M/filter/E25_ref20M_alt_2.fastq*


